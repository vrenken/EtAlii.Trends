// <auto-generated />
using System;
using EtAlii.Trends;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EtAlii.Trends.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220419095804_base")]
    partial class @base
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.4");

            modelBuilder.Entity("EtAlii.Trends.Diagrams.Diagram", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<float>("DiagramWidth")
                        .HasColumnType("REAL");

                    b.Property<double>("DiagramZoom")
                        .HasColumnType("REAL");

                    b.Property<double>("HorizontalOffset")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("PropertyGridHeight")
                        .HasColumnType("REAL");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<double>("VerticalOffset")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("Diagrams");
                });

            modelBuilder.Entity("EtAlii.Trends.Editor.Layers.Layer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DiagramId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsChecked")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsExpanded")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DiagramId");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("ParentId");

                    b.ToTable("Layers");
                });

            modelBuilder.Entity("EtAlii.Trends.Editor.Trends.Component", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Moment")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TrendId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("TrendId");

                    b.ToTable("Components");
                });

            modelBuilder.Entity("EtAlii.Trends.Editor.Trends.Connection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DiagramId")
                        .HasColumnType("TEXT");

                    b.Property<double>("SourceDirection")
                        .HasColumnType("REAL");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("TEXT");

                    b.Property<double>("SourceLength")
                        .HasColumnType("REAL");

                    b.Property<double>("TargetDirection")
                        .HasColumnType("REAL");

                    b.Property<Guid>("TargetId")
                        .HasColumnType("TEXT");

                    b.Property<double>("TargetLength")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("DiagramId");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("SourceId");

                    b.HasIndex("TargetId");

                    b.ToTable("Connections");
                });

            modelBuilder.Entity("EtAlii.Trends.Editor.Trends.Trend", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Begin")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DiagramId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("End")
                        .HasColumnType("TEXT");

                    b.Property<double>("H")
                        .HasColumnType("REAL");

                    b.Property<bool>("IsExpanded")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("LayerId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("W")
                        .HasColumnType("REAL");

                    b.Property<double>("X")
                        .HasColumnType("REAL");

                    b.Property<double>("Y")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("DiagramId");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("LayerId");

                    b.ToTable("Trends");
                });

            modelBuilder.Entity("EtAlii.Trends.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EtAlii.Trends.Diagrams.Diagram", b =>
                {
                    b.HasOne("EtAlii.Trends.User", "User")
                        .WithMany("Diagrams")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EtAlii.Trends.Editor.Layers.Layer", b =>
                {
                    b.HasOne("EtAlii.Trends.Diagrams.Diagram", "Diagram")
                        .WithMany("Layers")
                        .HasForeignKey("DiagramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EtAlii.Trends.Editor.Layers.Layer", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Diagram");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("EtAlii.Trends.Editor.Trends.Component", b =>
                {
                    b.HasOne("EtAlii.Trends.Editor.Trends.Trend", "Trend")
                        .WithMany("Components")
                        .HasForeignKey("TrendId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trend");
                });

            modelBuilder.Entity("EtAlii.Trends.Editor.Trends.Connection", b =>
                {
                    b.HasOne("EtAlii.Trends.Diagrams.Diagram", "Diagram")
                        .WithMany()
                        .HasForeignKey("DiagramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EtAlii.Trends.Editor.Trends.Component", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EtAlii.Trends.Editor.Trends.Component", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Diagram");

                    b.Navigation("Source");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("EtAlii.Trends.Editor.Trends.Trend", b =>
                {
                    b.HasOne("EtAlii.Trends.Diagrams.Diagram", "Diagram")
                        .WithMany("Trends")
                        .HasForeignKey("DiagramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EtAlii.Trends.Editor.Layers.Layer", "Layer")
                        .WithMany()
                        .HasForeignKey("LayerId");

                    b.Navigation("Diagram");

                    b.Navigation("Layer");
                });

            modelBuilder.Entity("EtAlii.Trends.Diagrams.Diagram", b =>
                {
                    b.Navigation("Layers");

                    b.Navigation("Trends");
                });

            modelBuilder.Entity("EtAlii.Trends.Editor.Layers.Layer", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("EtAlii.Trends.Editor.Trends.Trend", b =>
                {
                    b.Navigation("Components");
                });

            modelBuilder.Entity("EtAlii.Trends.User", b =>
                {
                    b.Navigation("Diagrams");
                });
#pragma warning restore 612, 618
        }
    }
}
